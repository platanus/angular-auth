angular.module("PlAuth",["restmod"]);
!function(){"use strict";function e(){function e(){this.getUidHeaderName=function(){return i},this.getTokenHeaderName=function(){return u},this.getUidKey=function(){return t},this.getTokenKey=function(){return n}}var t="uid",n="token",i="X-User-Email",u="X-User-Token";this.setTokenHeaderName=function(e){u=e},this.setUidHeaderName=function(e){i=e},this.setUidKey=function(e){t=e},this.setTokenKey=function(e){n=e},this.$get=function(){return new e}}angular.module("PlAuth").provider("AuthConfig",e)}();
!function(){"use strict";function e(e,t){function r(){return!!e.getKey("uid")&&!!e.getKey("token")}function n(){return!!e.getKey("uid")}function i(){var t={};return t[g]=e.getKey("uid"),t[d]=e.getKey("token"),t}function o(t){if(!angular.isObject(t))throw new Error("an object was expected to store");if(t[s]){if(!t[c])throw new Error("A uid is need");e.setKey("token",t[s])}t[c]&&e.setKey("uid",t[c])}function u(){e.eraseKey("uid"),e.eraseKey("token")}var a={store:o,clear:u,isLogged:r,isRegistered:n,getAuthorizationHeaders:i},d=t.getTokenHeaderName(),g=t.getUidHeaderName(),s=t.getTokenKey(),c=t.getUidKey();return a}angular.module("PlAuth").service("AuthSrv",e),e.$inject=["LocalDataSrv","AuthConfig"]}();
!function(){"use strict";function e(e,t,n){return e.mixin(function(){this.on("before-request",function(e){n.isLogged()&&(e.headers=angular.extend(e.headers||{},n.getAuthorizationHeaders()))})})}angular.module("PlAuth").service("HttpAuth",e),e.$inject=["restmod","inflector","AuthSrv"]}();
!function(){"use strict";angular.module("PlAuth").factory("LocalDataSrv",function(){var t=function(t){delete window.localStorage[t]},e=function(t){return localStorage.getItem(t)},o=function(t){return!!localStorage.getItem(t)},n=function(t,e){localStorage.setItem(t,e)};return{setKey:n,getKey:e,isKeySet:o,eraseKey:t}})}();