angular.module("PlAuth",["restmod"]);
!function(){"use strict";function t(){function t(){this.getUidKey=function(){return n},this.getTokenKey=function(){return e}}var n="uid",e="token";this.setUidKey=function(t){n=t},this.setTokenKey=function(t){e=t},this.$get=function(){return new t}}angular.module("PlAuth").provider("AuthConfig",t)}();
!function(){"use strict";function e(e,t){function n(){return!!e.getKey("uid")&&!!e.getKey("token")}function r(){return!!e.getKey("uid")}function i(){return"token="+e.getKey("token")+" uid="+e.getKey("uid")}function o(t){if(!angular.isObject(t))throw new Error("an object was expected to store");if(t[c]){if(!t[s])throw new Error("A uid is need");e.setKey("token",t[c])}t[s]&&e.setKey("uid",t[s])}function u(){e.eraseKey("uid"),e.eraseKey("token")}var a={store:o,clear:u,isLogged:n,isRegistered:r,getAuthorizationHeader:i},c=t.getTokenKey(),s=t.getUidKey();return a}angular.module("PlAuth").service("AuthSrv",e),e.$inject=["LocalDataSrv","AuthConfig"]}();
!function(){"use strict";function t(t,e,n){return t.mixin(function(){this.on("before-request",function(t){n.isLogged()&&(t.headers=angular.extend(t.headers||{},{Authorization:n.getAuthorizationHeader()}))})})}angular.module("PlAuth").service("HttpAuth",t),t.$inject=["restmod","inflector","AuthSrv"]}();
!function(){"use strict";angular.module("PlAuth").factory("LocalDataSrv",function(){var t=function(t){delete window.localStorage[t]},e=function(t){return localStorage.getItem(t)},o=function(t){return!!localStorage.getItem(t)},n=function(t,e){localStorage.setItem(t,e)};return{setKey:n,getKey:e,isKeySet:o,eraseKey:t}})}();